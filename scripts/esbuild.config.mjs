import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import { getChildProcessUtils } from '@zoodogood/utils/nodejs';
import { vanillaExtractPlugin } from "@vanilla-extract/esbuild-plugin";





const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;



const prod = process.argv[2] === "production";
(async () => {
	
	const context = await esbuild.context({
		banner: {
			js: banner,
		},
		entryPoints: ["src/main.tsx"],
		bundle: true,
		external: [
			"obsidian",
			"electron",
			"@codemirror/autocomplete",
			"@codemirror/collab",
			"@codemirror/commands",
			"@codemirror/language",
			"@codemirror/lint",
			"@codemirror/search",
			"@codemirror/state",
			"@codemirror/view",
			"@lezer/common",
			"@lezer/highlight",
			"@lezer/lr",
			...builtins,
		],
		format: "cjs",
		target: "es2018",
		logLevel: "info",
		sourcemap: prod ? false : "inline",
		treeShaking: true,
		plugins: [vanillaExtractPlugin()],
		outfile: "build/main.js",
	});

	if (prod) {
		await context.rebuild();
	} else {
		await context.watch();
	}
	
	
	

	const { run } = getChildProcessUtils({ root: process.cwd() });
	await run("mv", ["build/main.css", "build/styles.css"]).whenEnd;
	await run("cp", ["manifest.json", "build/manifest.json"]).whenEnd;

	if (prod){
		process.exit(0);
	}
})();
